---
title: Differential Equation
subtitle: Differential Equation in Machine Learning
about:
  template: marquee
  image: ../../../images/gradientv12.jpg
  links:
    - icon: twitter
      text: twitter
      href: https://twitter.com
    - icon: github
      text: Github
      href: https://github.com
listing:
  sort: "date desc"
  contents: "posts"
  sort-ui: false
  filter-ui: false
  categories: true
  feed: true

page-layout: full
---

![](/images/ai-pic7cp.jpg)

---
title: "diffEqs"
author: "Vanh Phom"
date: "11/01/2022"
format:
  html:
    code-fold: true

---



## Differential Equation
It is a Mathematical branch that use to work with problem involving  one item change in relation to another item. 


### Ordinary Differential  Equation (ODE)
ODE dealing with a single dependent variable(function) changed with respect to an independent variable changed. Here an example of ODE problem figure out the compound interest.

::: {.callout-tip}

ODE general equation form $\frac{du}{dt} = pu$
:::

#### Problem: compute the compound Interest of a bank account
Julia has a DifferentialEquation.jl package
<!-- 

using Pkg; Pkg.add("DifferentialEquations.jl")




using DifferentialEquations.jl


Here the general equation of ODE
$\frac{du}{dt} = pu$ where p is parameter that change the function u

$f(u,p,t) = pu$  where u is the bank account, p is the interest and t is time 


using PlutoUI

define the function f as
f(u,p,t) = p * u -->

<!-- # value of account at t=0
# u_begin = 1.0
# md" begining balance: $(@bind u_begin Slider(1.0:1000.0,1.0,true))"  -->

p: annual interest rate

interest rate: $(@bind p Slider(0.10:0.10:1.0,1.0,true))

t: time in year
t_begin = 0.0
$(Years: @bind t_end  Slider( 1.0:50.0,1.0,true))
tspan = (t_begin,t_end)
<!-- # begin
# 	import Pkg
# 	Pkg.resolve()
# 	# Pkg.add("DifferentialEquations")
# end -->
using DifferentialEquations
define ODE problem the differention equation package to solve
<!-- # prob = ODEProblem(f,u_begin,tspan,p) -->
where f is the function that have the form f(u,p,t) and intial value, time span from begin to end, p is the parameter that change u

solving ODE problem
where f is the function that have the form f(u,p,t) and intial value, time span from begin to end, p is the parameter that change u

solving ODE problem
sol = solve(prob)
using Plots
interest rate: $(@bind p Slider(0.10:0.10:1.0,1.0,true))

begining balance: $(@bind u_begin Slider(1.0:1000.0,1.0,true))
Years: $( @bind t_end  Slider( 1.0:50.0,1.0,true))
prob = ODEProblem(f,u_begin,tspan,p)
lot(sol,
		lengend=false,
		linewidth=2,
		title="continuous compound interest",
		xaxis= "time in year",
		yaxis= "account balance in dollars",
		formatter = :plain,
		widen = true,
		xlims = (0.0,50.0),
		ylims = (0.0,1_000_000.0)
)

sol(1)

Euler number is e = 2.718281708...
Euler number is the answer to the question what is the balance of and account that start with $1 and the interest is 100% per year compound continuously it's 2.71
ODE with computer is called numerical ODE analysis which is an estimate value since computer use floating point number it will never going to be exact unlike analytic ODE or symbolic ODE where using symbol manipution may come out with a more exact value On the other hand, the numerical ODE always find the solution if given the an initial and end since it uses time stamp to do the calculation

e_estimate = sol(1)
real_EULER = â„¯
diff = real_EULER - e_estimate